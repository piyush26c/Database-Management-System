>>>[7.1]
>  CREATE TABLE acc_mstr71 (acc_no NUMBER(3) UNIQUE, balance NUMBER(10,3));
 
DECLARE
	mwithdrawl acc_mstr71.balance%type;
	mbalance acc_mstr71.balance%type;
	macc_no acc_mstr71.acc_no%type;
	RULE_VIOLETED EXCEPTION;

BEGIN
	macc_no := &acc_no;
	mwithdrawl := &mwithdrawl;
	SELECT balance INTO mbalance 
	FROM acc_mstr71
	WHERE acc_no = macc_no;
	IF mwithdrawl > mbalance THEN
		RAISE RULE_VIOLETED;
	ELSIF mbalance >= mwithdrawl THEN
		UPDATE acc_mstr71 SET balance = balance - 500;
		DBMS_OUTPUT.PUT_LINE('your transaction is successful');
	END IF;

EXCEPTION
	WHEN RULE_VIOLETED THEN
		DBMS_OUTPUT.PUT_LINE('Bank rule violetd.....500 ruppees deducted from your account');
	WHEN VALUE_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('error occured in arithmatic operaions');
	WHEN PROGRAM_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('internal program error occured');		
	WHEN STORAGE_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('PL/SQL got out of memory | memory got corrupted');
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE ('error');
END;
/

>>>[7.2]
>  CREATE TABLE increment_salary (emp_no NUMBER(3), FOREIGN KEY(emp_no) REFERENCES emp72 ON DELETE CASCADE, salary NUMBER(5,2) CHECK(salary > 0));

>  CREATE TABLE emp72 (emp_no NUMBER(3) PRIMARY KEY, salary NUMBER(5,2) CHECK(salary > 0));

DECLARE
	memp_no emp72.emp_no%type;
	msalary emp72.salary%type;
	CURSOR c IS SELECT emp_no, salary
	FROM emp72 
	WHERE salary < (SELECT AVG(salary) FROM emp72);

BEGIN	
	OPEN c;
	IF c%ISOPEN THEN	
	LOOP
		FETCH c INTO memp_no, msalary;
		EXIT WHEN c%NOTFOUND;
		IF c%FOUND THEN
			UPDATE emp72 SET salary = msalary + 0.01*msalary
			WHERE salary = msalary;
			INSERT INTO increment_salary VALUES (memp_no, msalary + 0.01*msalary);
		ELSE
			DBMS_OUTPUT.PUT_LINE('no salary is less than avg salary of organisation');
		END IF;
	END LOOP;
	CLOSE c;
	END IF;

EXCEPTION	
	WHEN INVALID_CURSOR THEN
		DBMS_OUTPUT.PUT_LINE('attempts are made to make a cursor operation that is not allowed');
	WHEN VALUE_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('error occured in arithmatic operaions');
	WHEN PROGRAM_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('internal program error occured');		
	WHEN STORAGE_ERROR THEN
		DBMS_OUTPUT.PUT_LINE('PL/SQL got out of memory | memory got corrupted');
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE ('error');	
END;
/	
